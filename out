yarn run v1.22.18
$ npm run build && node bin/flow-sight.js dry-run ./example/send-flow.cdc '[{"type": "UInt64", "value": 0.00000001}, {"type": "Address", "value": "0x54b9b6c046396b55"}]' 0xf9f7a4ebaf29be6c -n mainnet

> flow-preview@1.0.0 build
> mkdir -p src/generated && node build.js

script code is import FlowToken from 0x1654653399040a61
import FungibleToken from 0xf233dcee88fe0abe
import DapperUtilityCoin from 0xead892083b3e2c6c
pub fun main(amount: UFix64, to: Address
        ): AnyStruct {
            
                let curAccount0 = getAuthAccount(0x54b9b6c046396b55)
                let ducVault0 <- DapperUtilityCoin.createEmptyVault()
                curAccount0.save(<-ducVault0, to: /storage/flowSightDapperUtilityCoinVault)
                curAccount0.unlink(/public/dapperUtilityCoinReceiver)
                curAccount0.link<&DapperUtilityCoin.Vault{FungibleToken.Receiver}>(
                    /public/dapperUtilityCoinReceiver,
                    target: /storage/flowSightDapperUtilityCoinVault
                )
            

                let curAccount1 = getAuthAccount(0xf9f7a4ebaf29be6c)
                let ducVault1 <- DapperUtilityCoin.createEmptyVault()
                curAccount1.save(<-ducVault1, to: /storage/flowSightDapperUtilityCoinVault)
                curAccount1.unlink(/public/dapperUtilityCoinReceiver)
                curAccount1.link<&DapperUtilityCoin.Vault{FungibleToken.Receiver}>(
                    /public/dapperUtilityCoinReceiver,
                    target: /storage/flowSightDapperUtilityCoinVault
                )
            
        
	let acct = getAuthAccount(0xf9f7a4ebaf29be6c)
let flowSightAcct = getAuthAccount(0x54b9b6c046396b55)
  
    let provider = acct.borrow<&FlowToken.Vault{FungibleToken.Provider}>(from: /storage/flowTokenVault)!
      var temporaryVault: @FlowToken.Vault <- provider.withdraw(amount: amount) as! @FlowToken.Vault
  
    let recipient = getAccount(to)
    let receiverRef = recipient.getCapability(/public/flowTokenReceiver)
                    .borrow<&{FungibleToken.Receiver}>()
                    ?? panic("Could not borrow a reference to the FlowToken receiver")
    receiverRef.deposit(from: <-temporaryVault)
  
	let flowSightResult: {String: AnyStruct} = {}
	/*INSERT_CODE_HERE*/
	return flowSightResult
}
script code is import FlowToken from 0x1654653399040a61
import FungibleToken from 0xf233dcee88fe0abe
import DapperUtilityCoin from 0xead892083b3e2c6c
pub fun main(amount: UFix64, to: Address
        ): AnyStruct {
            
                let curAccount0 = getAuthAccount(0x54b9b6c046396b55)
                let ducVault0 <- DapperUtilityCoin.createEmptyVault()
                curAccount0.save(<-ducVault0, to: /storage/flowSightDapperUtilityCoinVault)
                curAccount0.unlink(/public/dapperUtilityCoinReceiver)
                curAccount0.link<&DapperUtilityCoin.Vault{FungibleToken.Receiver}>(
                    /public/dapperUtilityCoinReceiver,
                    target: /storage/flowSightDapperUtilityCoinVault
                )
            

                let curAccount1 = getAuthAccount(0xf9f7a4ebaf29be6c)
                let ducVault1 <- DapperUtilityCoin.createEmptyVault()
                curAccount1.save(<-ducVault1, to: /storage/flowSightDapperUtilityCoinVault)
                curAccount1.unlink(/public/dapperUtilityCoinReceiver)
                curAccount1.link<&DapperUtilityCoin.Vault{FungibleToken.Receiver}>(
                    /public/dapperUtilityCoinReceiver,
                    target: /storage/flowSightDapperUtilityCoinVault
                )
            
        
	let acct = getAuthAccount(0xf9f7a4ebaf29be6c)
let flowSightAcct = getAuthAccount(0xf9f7a4ebaf29be6c)
  
    let provider = acct.borrow<&FlowToken.Vault{FungibleToken.Provider}>(from: /storage/flowTokenVault)!
      var temporaryVault: @FlowToken.Vault <- provider.withdraw(amount: amount) as! @FlowToken.Vault
  
    let recipient = getAccount(to)
    let receiverRef = recipient.getCapability(/public/flowTokenReceiver)
                    .borrow<&{FungibleToken.Receiver}>()
                    ?? panic("Could not borrow a reference to the FlowToken receiver")
    receiverRef.deposit(from: <-temporaryVault)
  
	let flowSightResult: {String: AnyStruct} = {}
	/*INSERT_CODE_HERE*/
	return flowSightResult
}
{
  "diff": [
    {
      "address": "0xf9f7a4ebaf29be6c",
      "checkReadable": "Check FT Balances",
      "check": "ft-balances-check",
      "propertyChanged": "balances",
      "humanReadable": "0.00200000 was changed to 0.00199999 for A.1654653399040a61.FlowToken.Vault"
    },
    {
      "address": "0xf9f7a4ebaf29be6c",
      "checkReadable": "Check FT Balances",
      "check": "ft-balances-check",
      "propertyChanged": "balances",
      "humanReadable": "0.00000000 was added to A.ead892083b3e2c6c.DapperUtilityCoin.Vault"
    },
    {
      "address": "0x54b9b6c046396b55",
      "checkReadable": "Check FT Balances",
      "check": "ft-balances-check",
      "propertyChanged": "balances",
      "humanReadable": "0.50099402 was changed to 0.50099403 for A.1654653399040a61.FlowToken.Vault"
    },
    {
      "address": "0x54b9b6c046396b55",
      "checkReadable": "Check FT Balances",
      "check": "ft-balances-check",
      "propertyChanged": "balances",
      "humanReadable": "0.00000000 was added to A.ead892083b3e2c6c.DapperUtilityCoin.Vault"
    },
    {
      "address": "0x54b9b6c046396b55",
      "checkReadable": "Check Public Path Capabilities",
      "check": "public-path-check",
      "propertyChanged": "capabilities",
      "humanReadable": "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}> was changed to Capability<&A.ead892083b3e2c6c.DapperUtilityCoin.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}> in accounts[0].checks[3].capabilities"
    }
  ],
  "currentStates": {
    "accounts": [
      {
        "address": "0x54b9b6c046396b55",
        "checks": [
          {
            "balances": {
              "A.1654653399040a61.FlowToken.Vault": "0.50099402"
            },
            "name": "Check FT Balances",
            "key": "ft-balances-check"
          },
          {
            "name": "Check NFT Counts",
            "tokens": {},
            "key": "nft-count-check"
          },
          {
            "capabilities": [],
            "name": "Check Private Path Capabilities",
            "key": "private-path-check"
          },
          {
            "capabilities": [
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Balance}>",
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}>"
            ],
            "name": "Check Public Path Capabilities",
            "key": "public-path-check"
          }
        ]
      },
      {
        "address": "0xf9f7a4ebaf29be6c",
        "checks": [
          {
            "balances": {
              "A.1654653399040a61.FlowToken.Vault": "0.00200000"
            },
            "name": "Check FT Balances",
            "key": "ft-balances-check"
          },
          {
            "name": "Check NFT Counts",
            "tokens": {
              "A.91b4cc10b2aa0e75.AllDaySeasonal.Collection": [
                "447427809"
              ],
              "A.0b2a3299cc857e29.TopShot.Collection": [
                "7576979",
                "6013673",
                "1264507",
                "328082",
                "7540781",
                "5909891",
                "4899414",
                "6001020",
                "5531619",
                "5439946"
              ],
              "A.329feb3ab062d289.UFC_NFT.Collection": [
                "1702261",
                "1529691"
              ],
              "A.2d4c3caffbeab845.FLOAT.Collection": [
                "803903493"
              ]
            },
            "key": "nft-count-check"
          },
          {
            "capabilities": [
              "Capability<&AnyResource{A.f233dcee88fe0abe.FungibleToken.Receiver}>"
            ],
            "name": "Check Private Path Capabilities",
            "key": "private-path-check"
          },
          {
            "capabilities": [
              "Capability<&A.c1e4f4f4c4257510.Market.SaleCollection{A.c1e4f4f4c4257510.Market.SalePublic}>",
              "Capability<&AnyResource{A.0b2a3299cc857e29.TopShot.MomentCollectionPublic}>",
              "Capability<&A.ead892083b3e2c6c.DapperUtilityCoin.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}>",
              "Capability<&A.91b4cc10b2aa0e75.AllDaySeasonal.Collection{A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.91b4cc10b2aa0e75.AllDaySeasonal.AllDaySeasonalCollectionPublic}>",
              "Capability<&A.329feb3ab062d289.UFC_NFT.Collection{A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.329feb3ab062d289.UFC_NFT.UFC_NFTCollectionPublic}>",
              "Capability<&A.18eb4ee6b3c026d2.PrivateReceiverForwarder.Forwarder>",
              "Capability<&A.2d4c3caffbeab845.GrantedAccountAccess.Info{A.2d4c3caffbeab845.GrantedAccountAccess.InfoPublic}>",
              "Capability<&AnyResource{A.f233dcee88fe0abe.FungibleToken.Receiver}>",
              "Capability<&A.2d4c3caffbeab845.FLOAT.Collection{A.1d7e57aa55817448.NonFungibleToken.Receiver,A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.1d7e57aa55817448.MetadataViews.ResolverCollection,A.2d4c3caffbeab845.FLOAT.CollectionPublic}>",
              "Capability<&A.2d4c3caffbeab845.FLOAT.FLOATEvents{A.2d4c3caffbeab845.FLOAT.FLOATEventsPublic,A.1d7e57aa55817448.MetadataViews.ResolverCollection}>",
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Balance}>"
            ],
            "name": "Check Public Path Capabilities",
            "key": "public-path-check"
          }
        ]
      }
    ]
  },
  "proposedStates": {
    "accounts": [
      {
        "address": "0x54b9b6c046396b55",
        "checks": [
          {
            "balances": {
              "A.ead892083b3e2c6c.DapperUtilityCoin.Vault": "0.00000000",
              "A.1654653399040a61.FlowToken.Vault": "0.50099403"
            },
            "name": "Check FT Balances",
            "key": "ft-balances-check"
          },
          {
            "name": "Check NFT Counts",
            "tokens": {},
            "key": "nft-count-check"
          },
          {
            "capabilities": [],
            "name": "Check Private Path Capabilities",
            "key": "private-path-check"
          },
          {
            "capabilities": [
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Balance}>",
              "Capability<&A.ead892083b3e2c6c.DapperUtilityCoin.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}>",
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}>"
            ],
            "name": "Check Public Path Capabilities",
            "key": "public-path-check"
          }
        ]
      },
      {
        "address": "0xf9f7a4ebaf29be6c",
        "checks": [
          {
            "balances": {
              "A.ead892083b3e2c6c.DapperUtilityCoin.Vault": "0.00000000",
              "A.1654653399040a61.FlowToken.Vault": "0.00199999"
            },
            "name": "Check FT Balances",
            "key": "ft-balances-check"
          },
          {
            "name": "Check NFT Counts",
            "tokens": {
              "A.91b4cc10b2aa0e75.AllDaySeasonal.Collection": [
                "447427809"
              ],
              "A.0b2a3299cc857e29.TopShot.Collection": [
                "7576979",
                "6013673",
                "1264507",
                "328082",
                "7540781",
                "5909891",
                "4899414",
                "6001020",
                "5531619",
                "5439946"
              ],
              "A.329feb3ab062d289.UFC_NFT.Collection": [
                "1702261",
                "1529691"
              ],
              "A.2d4c3caffbeab845.FLOAT.Collection": [
                "803903493"
              ]
            },
            "key": "nft-count-check"
          },
          {
            "capabilities": [
              "Capability<&AnyResource{A.f233dcee88fe0abe.FungibleToken.Receiver}>"
            ],
            "name": "Check Private Path Capabilities",
            "key": "private-path-check"
          },
          {
            "capabilities": [
              "Capability<&A.c1e4f4f4c4257510.Market.SaleCollection{A.c1e4f4f4c4257510.Market.SalePublic}>",
              "Capability<&AnyResource{A.0b2a3299cc857e29.TopShot.MomentCollectionPublic}>",
              "Capability<&A.ead892083b3e2c6c.DapperUtilityCoin.Vault{A.f233dcee88fe0abe.FungibleToken.Receiver}>",
              "Capability<&A.91b4cc10b2aa0e75.AllDaySeasonal.Collection{A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.91b4cc10b2aa0e75.AllDaySeasonal.AllDaySeasonalCollectionPublic}>",
              "Capability<&A.329feb3ab062d289.UFC_NFT.Collection{A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.329feb3ab062d289.UFC_NFT.UFC_NFTCollectionPublic}>",
              "Capability<&A.18eb4ee6b3c026d2.PrivateReceiverForwarder.Forwarder>",
              "Capability<&A.2d4c3caffbeab845.GrantedAccountAccess.Info{A.2d4c3caffbeab845.GrantedAccountAccess.InfoPublic}>",
              "Capability<&AnyResource{A.f233dcee88fe0abe.FungibleToken.Receiver}>",
              "Capability<&A.2d4c3caffbeab845.FLOAT.Collection{A.1d7e57aa55817448.NonFungibleToken.Receiver,A.1d7e57aa55817448.NonFungibleToken.CollectionPublic,A.1d7e57aa55817448.MetadataViews.ResolverCollection,A.2d4c3caffbeab845.FLOAT.CollectionPublic}>",
              "Capability<&A.2d4c3caffbeab845.FLOAT.FLOATEvents{A.2d4c3caffbeab845.FLOAT.FLOATEventsPublic,A.1d7e57aa55817448.MetadataViews.ResolverCollection}>",
              "Capability<&A.1654653399040a61.FlowToken.Vault{A.f233dcee88fe0abe.FungibleToken.Balance}>"
            ],
            "name": "Check Public Path Capabilities",
            "key": "public-path-check"
          }
        ]
      }
    ]
  }
}
Done in 3.33s.
